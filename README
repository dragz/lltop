                               *Lltop*

Lltop[0] is a command line utility for HPC cluster administrators
which combines per-client I/O statistics from Lustre filesystem
servers, with job assignment data from cluster batch schedulers, to
give a job-by-job accounting of filesystem load.  Under typical usage,
lltop is invoked with the name of a filesystem, runs for a
configurable interval (10 seconds say), and outputs a table
summarizing I/O and RPC loads indexed by job identifier; for example:

  $ lltop share
  JOB      WR_MB    RD_MB    REQS      OWNER  WORKDIR
  12101    15925    67630  133694   jfourier  /share/jfourier/fftw_run
  10322     2254     1027    2504     claude  /share/claude/viscous-flow
  ...

Lltop is normally run in response to observations of excessive load on
file servers or degraded filesystem performance, and is used to assist
system administrators in identifying jobs (and users) with problematic
I/O patterns.  A potential secondary use is to determine the I/O
profiles of applications running at scale.  lltop is designed to run
as a point and shoot diagnostic utility, and is not a replacement for
continuous monitoring tools such as LMT[1] or Collectl[2].

                              *Overview*

Lltop has two executable components, lltop itself, and lltop-serv.
lltop is usually run directly and given the name of a filesystem to
query.  From the filesystem name, it derives a list of servers (MDSs
and OSSs), and for each it forks and execs ssh to run a copy of
lltop-serv on the server.

On the server, lltop-serv scrapes the per-client stats files

  /proc/fs/lustre/{mds,obdfilter}/<target>/exports/<client>/stats

to determine each client's load in terms of bytes written, bytes read,
and requests processed.  It actually makes two passes through the
stats files [3], sleeping for a configurable interval between, and
returns the differences.  The output of lltop-serv consists of lines
[4] of the form

  <ipv4-addr>@<lnet-net-name> <wr_B> <rd_B> <reqs>

where

  <ipv4-addr>@@<lnet-net-name> is the client name according to the
  server, for example 192.0.32.10@tcp,
  <wr_B> and <rd_B> are the number of bytes written and read,
  <reqs> is the number of request other than pings[5].

Lltop reads the output of each lltop-serv, and translates client
addresses to hostnames, and hostnames to jobids [6], to account for
each client's load against its current job.  If lltop cannot find a
job assignment for a given client then considers the client to be the
sole member of a job whose jobid is the clients hostname.  Similarly,
if lltop cannot find a hostname for a given client IP address, it uses
the address as the clients name and current jobid.  This allows us to
handle load generated by login or admin nodes in the same band.

                               *Hooks*

To get lltop to work on your site you probably need to modify some or
all of the functions in hooks.c.  In particular, if you're not running
SGE and you're not the TACC Ranger admins then you will at least need
to modify lltop_get_serv_list() and lltop_get_job().  The first tells
lltop which servers belong to a given filesystem.  The second is used
to find the current jobid for a given host, so it needs to be
customized to query your batch scheduler.

Also, how well does reverse DNS work at your site?  If the answer is
"Uhhh, not real well.", or if you have some weird LNET with a weird
address format like qswlnd, whatever that is, then you need to modify
lltop_get_name() which translates Lustre addresses to hostnames.  The
version is hooks.c uses getnameinfo(), so it should work most of the
time, right?

You should probably go ahead and read and understand all of hooks.c.
Sorry, it's free software, you get what you pay for.  If you want
something enterprisey then I'm sure you already know who to ask for
that.  It would be nice if we could specify that certain functions
from hooks.c be delegated to a user provided script; but I haven't
done that yet.  If you're thinking "Oh for the love of Guido von
Python, why was this written in C?" then rest assured that I've
wondered that myself, but please don't bother me by asking, just sit
down and rewrite it in whatever language blows your hair back.

Otherwise, please send me any comments, questions, improvements.
Please, put lltop in the subject line.

John L. Hammond
ICES, The University of Texas at Austin
<jhammond@ices.utexas.edu>

--

0. lltop is a recursive anagram of lltop.

1. Lustre Monitoring Tool: http://code.google.com/p/lmt/

2. Collectl: http://collectl.sourceforge.net/

3. Note that lltop-serv does not clear the stats files.  In fact
clearing stats files while lltop-serv is running may cause it to
misreport or under report usage.  Client evictions can also affect the
accuracy of the data returned, but lltop-serv does use some simple
heuristics to mitigate their effects.  However it should be remembered
that lltop is not an exact tool and should be used with judgement.

4. Lltop-serv does not count pings because doing so tends to distort
the statistics for large jobs.

5. As an optimization, if a client fails to geterate any load during
the interval, then lltop-serv omits that client from its output.

6. Lltop keeps a cache of address to jobid mappings so that the hooks
lltop_get_name() and lltop_get_job() are called at most once per
client.
